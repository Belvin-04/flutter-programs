import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:http/http.dart' as http;

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Login(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  final String name;
  MyHomePage({required this.name});

  @override
  _MyHomePageState createState() => _MyHomePageState(name);
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  String name = "";
  _MyHomePageState(this.name);

  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("Home"),
        ),
        body: Center(
            child: Text("Welcome, $name")
        )
      // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}


class Login extends StatefulWidget {
  const Login({Key? key}) : super(key: key);

  @override
  State<Login> createState() => _LoginState();
}

class _LoginState extends State<Login> {

  final _formKey = GlobalKey<FormState>();
  var _email = TextEditingController();
  var _password = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: Text("Login"),),
        body: Padding(
          padding: EdgeInsets.all(6.0),
          child: Form(
            key: _formKey,
            child: Column(
              children: [
                TextFormField(
                  keyboardType: TextInputType.emailAddress,
                  controller: _email,
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Email";
                    }
                    return null;
                  },
                  decoration: InputDecoration(
                      labelText: "Email",
                      border: OutlineInputBorder()
                  ),
                ),
                SizedBox(height: 6.0,),
                TextFormField(
                  obscureText: true,
                  controller: _password,
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Password";
                    }
                    return null;
                  },
                  decoration: InputDecoration(
                      labelText: "Password",
                      border: OutlineInputBorder()
                  ),
                ),
                SizedBox(width: double.infinity,child: ElevatedButton(onPressed: (){
                  if(_formKey.currentState!.validate()){
                    login(_email.text,_password.text,context);
                  }
                }, child: Text("Login"))),
                SizedBox(height: 6.0,),
                GestureDetector(onTap: (){
                  Navigator.push(context,MaterialPageRoute(builder: (context)=> SignUp()));
                },child: Text("Register?",style: TextStyle(color: Colors.blue),))
              ],
            ),
          ),
        )
    );
  }

  void login(String email,String password,BuildContext context) async {
    var url = Uri.parse("http://192.168.0.102/FlutterTestAPI/api.php");
    var response = await http.post(url, body: {'email': email,'password':password,'signin':"1"});
    var parsed = jsonDecode(response.body);
    if(parsed["code"] == 202){
        Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)=>MyHomePage(name:parsed["user"])));
    }
    else{
      Fluttertoast.showToast(
          msg: parsed["message"],
          toastLength: Toast.LENGTH_SHORT,

          timeInSecForIosWeb: 1,
          backgroundColor: Colors.red,
          textColor: Colors.white,
          fontSize: 16.0
      );
    }

  }
}



class SignUp extends StatefulWidget {
  const SignUp({Key? key}) : super(key: key);

  @override
  State<SignUp> createState() => _SignUpState();
}

class _SignUpState extends State<SignUp> {

  final _formkey = GlobalKey<FormState>();
  var _email = TextEditingController();
  var _password = TextEditingController();
  var _name = TextEditingController();
  var _phone = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(title: Text("Sign Up"),),
        body: Padding(
          padding: EdgeInsets.all(6.0),
          child: Form(
            key: _formkey,
            child: Column(
              children: [
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Name";
                    }
                    return null;
                  },
                  controller: _name,
                  decoration: InputDecoration(
                      labelText: "Name",
                      border: OutlineInputBorder()
                  ),
                ),
                SizedBox(height: 6.0,),
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Email";
                    }
                    return null;
                  },
                  keyboardType: TextInputType.emailAddress,
                  controller: _email,
                  decoration: InputDecoration(
                      labelText: "Email",
                      border: OutlineInputBorder()
                  ),
                ),
                SizedBox(height: 6.0,),
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Password";
                    }
                    return null;
                  },
                  controller: _password,
                  obscureText: true,
                  decoration: InputDecoration(
                      labelText: "Password",
                      border: OutlineInputBorder()
                  ),
                ),
                SizedBox(height: 6.0,),
                TextFormField(
                  validator: (value){
                    if(value == null || value.isEmpty){
                      return "Please enter Phone Number";
                    }
                    else if(value.length != 10){
                      return "Invalid Phone Number Format";
                    }
                    return null;
                  },
                  controller: _phone,
                  keyboardType: TextInputType.number,
                  decoration: InputDecoration(
                      labelText: "Phone",
                      border: OutlineInputBorder()
                  ),
                ),
                SizedBox(width: double.infinity,child: ElevatedButton(onPressed: (){
                  if(_formkey.currentState!.validate()){
                    signUp(_name.text,_email.text,_password.text,_phone.text,context);
                  }
                }, child: Text("Sign Up"))),

              ],
            ),
          ),
        )
    );
  }

  void signUp(String name,String email,String password, String phone,BuildContext context) async{
    var url = Uri.parse("http://192.168.0.102/FlutterTestAPI/api.php");
    var response = await http.post(url, body: {'name': name, 'email': email,'password':password,'phone':phone,'signup':"1"});
    var parsed = jsonDecode(response.body);
    if(parsed["code"] == 200){
      Navigator.pop(context);
    }
    else{
      Fluttertoast.showToast(
          msg: parsed["message"],
          toastLength: Toast.LENGTH_SHORT,

          timeInSecForIosWeb: 1,
          backgroundColor: Colors.red,
          textColor: Colors.white,
          fontSize: 16.0
      );
    }
  }
}

